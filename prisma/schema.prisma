generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  reports   Report[]

  @@map("users")
}

model Customer {
  id          String       @id @default(cuid())
  name        String       @db.VarChar(200)
  code        String       @unique @db.VarChar(20)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  reportItems ReportItem[]
  workOrders  WorkOrder[]

  @@map("customers")
}

model Machine {
  id          String       @id @default(cuid())
  name        String       @db.VarChar(100)
  category    String       @db.VarChar(50)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  reportItems ReportItem[]

  @@map("machines")
}

model WorkOrder {
  id          String       @id @default(cuid())
  frontNumber String       @map("front_number") @db.VarChar(10)
  backNumber  String       @map("back_number") @db.VarChar(10)
  description String?
  customerId  String       @map("customer_id")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  reportItems ReportItem[]
  customer    Customer     @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@unique([frontNumber, backNumber])
  @@map("work_orders")
}

model Report {
  id          String       @id @default(cuid())
  date        DateTime     @db.Date
  workerId    String       @map("worker_id")
  submittedAt DateTime     @map("submitted_at")
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  reportItems ReportItem[]
  worker      User         @relation(fields: [workerId], references: [id], onDelete: Cascade)

  @@unique([date, workerId])
  @@map("reports")
}

model ReportItem {
  id          String    @id @default(cuid())
  reportId    String    @map("report_id")
  customerId  String    @map("customer_id")
  workOrderId String    @map("work_order_id")
  machineId   String    @map("machine_id")
  startTime   DateTime  @map("start_time")
  endTime     DateTime  @map("end_time")
  workStatus  String?   @map("work_status") @db.VarChar(20)
  remarks     String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  customer    Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  machine     Machine   @relation(fields: [machineId], references: [id], onDelete: Cascade)
  report      Report    @relation(fields: [reportId], references: [id], onDelete: Cascade)
  workOrder   WorkOrder @relation(fields: [workOrderId], references: [id], onDelete: Cascade)

  @@map("report_items")
}
