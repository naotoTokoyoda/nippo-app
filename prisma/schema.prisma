// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 作業者テーブル
model User {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // リレーション
  reports Report[]

  @@map("users")
}

// 客先テーブル
model Customer {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(200)
  code      String   @unique @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // リレーション
  workOrders WorkOrder[]
  reportItems ReportItem[]

  @@map("customers")
}

// 機械種類テーブル
model Machine {
  id       String @id @default(cuid())
  name     String @db.VarChar(100)
  category String @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // リレーション
  reportItems ReportItem[]

  @@map("machines")
}

// 工番テーブル
model WorkOrder {
  id          String   @id @default(cuid())
  frontNumber String   @map("front_number") @db.VarChar(10)
  backNumber  String   @map("back_number") @db.VarChar(10)
  description String?  @db.Text
  customerId  String   @map("customer_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // リレーション
  customer    Customer     @relation(fields: [customerId], references: [id], onDelete: Cascade)
  reportItems ReportItem[]

  @@unique([frontNumber, backNumber])
  @@map("work_orders")
}

// 日報テーブル
model Report {
  id          String   @id @default(cuid())
  date        DateTime @db.Date
  workerId    String   @map("worker_id")
  submittedAt DateTime @map("submitted_at")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // リレーション
  worker      User         @relation(fields: [workerId], references: [id], onDelete: Cascade)
  reportItems ReportItem[]

  @@unique([date, workerId])
  @@map("reports")
}

// 日報項目テーブル
model ReportItem {
  id           String   @id @default(cuid())
  reportId     String   @map("report_id")
  customerId   String   @map("customer_id")
  workOrderId  String   @map("work_order_id")
  machineId    String   @map("machine_id")
  startTime    DateTime @map("start_time")
  endTime      DateTime @map("end_time")
  workStatus   String?  @map("work_status") @db.VarChar(20)
  remarks      String?  @db.Text
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // リレーション
  report     Report    @relation(fields: [reportId], references: [id], onDelete: Cascade)
  customer   Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  workOrder  WorkOrder @relation(fields: [workOrderId], references: [id], onDelete: Cascade)
  machine    Machine   @relation(fields: [machineId], references: [id], onDelete: Cascade)

  @@map("report_items")
}
